# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)

version: '3.7'

# Define services
services:
  # App backend service
  app-server:
    # Configuration for building the docker image for the backend service
    build:
      context: lernopus-app-server # Use an image built from the specified dockerfile in the `lernopus-app-server` directory.
      dockerfile: Dockerfile
    ports:
      - "1010:1010" # Forward the exposed port 1010 on the container to port 1010 on the host machine
    restart: always
    depends_on: 
      - db # This service depends on mysql. Start that first.
    environment: # Pass environment variables to the service
      SPRING_DATASOURCE_URL: jdbc:mysql://localhost:8085/lernopus-dev?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: Amer@9952349976     
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - backend
      - frontend

  # Frontend Service 
  app-client:
    build:
      context: lernopus-app-client # Use an image built from the specified dockerfile in the `lernopus-app-client` directory.
      dockerfile: Dockerfile
      args:
        REACT_APP_API_BASE_URL: http://127.0.0.1:1010/api
    ports:
      - "9090:80" # Forward the exposed port 80 on the container to port 80 on the host machine
    restart: always
    depends_on:
      - app-server
    networks:
      - frontend  

  # Database Service (Mysql)
  db:
    image: mysql:5.7
    ports:
      - "8085:8085"
    restart: always
    environment:
      MYSQL_DATABASE: lernopus-dev
      MYSQL_USER: root
      MYSQL_PASSWORD: Amer@9952349976
      MYSQL_ROOT_PASSWORD: Amer@9952349976
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - backend  
  
# Volumes
volumes:
  db-data:

# Networks to be created to facilitate communication between containers
networks:
  backend:
  frontend:    